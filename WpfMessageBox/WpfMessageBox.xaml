<Window x:Class="WpfMessageBoxLibrary.WpfMessageBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfMessageBoxLibrary"
        mc:Ignorable="d"
        Title="[Title]"
        MinHeight="150"
        MinWidth="150"
        MaxWidth="800"
        SizeToContent="WidthAndHeight" 
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        WindowStyle="SingleBorderWindow" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="109*"/>
            <ColumnDefinition Width="141*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid
            x:Name="gridContent"
            Grid.Row="0"
            Margin="10,10,10,0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MaxHeight="500"/>
                <RowDefinition Height="*" MaxHeight="500"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid 
                Grid.Row="0"
                Grid.RowSpan="5"
                Grid.Column="0"
                MaxWidth="32"
                Margin="0,0,10,0">
                
                <Image
                x:Name="imageIcon"
                VerticalAlignment="Top"/>
            </Grid>

            <TextBlock
                x:Name="textBlockHeader"
                Grid.Row="0"
                Grid.Column="1"
                MaxHeight="100"
                Margin="0,0,0,10"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontSize="18"
                Foreground="#0078d7"
                Text="[Header]"
                TextWrapping="Wrap"/>
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                Grid.RowSpan="2"
                Margin="0,0,0,10"
                x:Name="textBlockMessage"
                Text="[Message]"
                TextWrapping="Wrap"
                VerticalAlignment="Center"
               />
            <DockPanel
                Grid.Row="3"
                Grid.Column="1">
                <Grid HorizontalAlignment="Left" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ScrollViewer
                            Grid.Column="1"
                            VerticalScrollBarVisibility="Auto">

                        <StackPanel  
                                Orientation="Horizontal"
                                VerticalAlignment="Center">
                            <Image Source="/WpfMessageBox;Component/warning_blue.png" Height="20" Margin="0,0,5,0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=textBox}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBox
                                    x:Name="textBox"
                                    Margin="0,10,0,10"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    MinWidth="250"
                                    TextOptions.TextFormattingMode="Display"
                                    local:SelectTextOnFocus.Active = "True"
                                    Style="{StaticResource textBoxInError}">
                                
                                <TextBox.Resources>
                                    <local:BindingProxy x:Key="proxy" Data="{Binding}"/>
                                </TextBox.Resources>

                                <TextBox.Text>
                                    <Binding Path="TextBoxText" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:MultiValidationRule>
                                                <local:MultiValidationRule.Wrapper>
                                                    <local:Wrapper Validation="{Binding Data.ValidationText, Source={StaticResource proxy}}"/>
                                                </local:MultiValidationRule.Wrapper>
                                            </local:MultiValidationRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </DockPanel>

            <CheckBox
                x:Name="checkBox"
                Grid.Row="4"
                Grid.Column="1"
                Margin="0,0,0,10"
                Content="[CheckBox]"
                TextOptions.TextFormattingMode="Display"/>
        </Grid>
        <Grid
            Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <GroupBox
                Grid.Column="0" 
                Grid.ColumnSpan="3"
                Grid.Row="0"
                Grid.RowSpan="2" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                >
            </GroupBox>
            <Expander
                x:Name="details"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Grid.Row="0"
                Margin="10"
                Header="See details"
                VerticalAlignment="Center" Expanded="Details_Expanded" Collapsed="Details_Collapsed">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid 
                    Margin="0,10,0,0">
                        <TextBox
                            x:Name="textBlockDetails"
                            Grid.Row="0" 
                            IsReadOnly="True"
                            TextWrapping="Wrap"
                            Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}">
                        </TextBox>
                    </Grid>
                </ScrollViewer>
            </Expander>
            <WrapPanel 
                Grid.Column="2"
                Grid.Row="0"
                Margin="10"
                HorizontalAlignment="Right">
                <Button
                    x:Name="buttonAbort"
                    Height="24"
                    MinWidth="80"
                    Padding="10,0"
                    Margin="10,0,0,0"
                    Click="ButtonAbort_Click"
                    Content="[Abort]"
                    TextOptions.TextFormattingMode="Display"/>
                <Button
                    x:Name="buttonRetry"
                    Height="24"
                    MinWidth="80"
                    Padding="10,0"
                    Margin="10,0,0,0"
                    Click="ButtonRetry_Click"
                    Content="[Retry]"
                    TextOptions.TextFormattingMode="Display"/>
                <Button
                    x:Name="buttonIgnore"
                    Height="24"
                    MinWidth="80"
                    Padding="10,0"
                    Margin="10,0,0,0"
                    Click="ButtonIgnore_Click"
                    Content="[Ignore]"
                    TextOptions.TextFormattingMode="Display"/>
                <Button
                    x:Name="buttonOk"
                    Height="24"
                    MinWidth="80"
                    Padding="10,0"
                    Margin="10,0,0,0"
                    Click="ButtonOk_Click"
                    Content="[OK]"
                    TextOptions.TextFormattingMode="Display">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=textBox}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                    x:Name="buttonYes"
                    Height="24"
                    MinWidth="80"
                    Margin="10,0,0,0"
                    Padding="10,0"
                    Click="ButtonYes_Click"
                    Content="[Yes]"
                    TextOptions.TextFormattingMode="Display"/>
                <Button
                    x:Name="buttonNo"
                    Height="24"
                    MinWidth="80"
                    Margin="10,0,0,0"
                    Padding="10,0"
                    Click="ButtonNo_Click"
                    Content="[No]"
                    TextOptions.TextFormattingMode="Display"/>
                <Button
                    x:Name="buttonCancel"
                    Height="24"
                    MinWidth="80"
                    Margin="10,0,0,0"
                    Padding="10,0"
                    Click="ButtonCancel_Click"
                    Content="[Cancel]"
                    TextOptions.TextFormattingMode="Display"/>
            </WrapPanel>
            <Grid
                x:Name="footer"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Grid.Row="1"
                Margin="10,0,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="49*"/>
                    <ColumnDefinition Width="681*"/>
                </Grid.ColumnDefinitions>
                <Separator
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                <Image
                    x:Name="imageFooter"
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="0,5,49.25,16"
                    MaxHeight="20" Grid.ColumnSpan="2"/>
                <TextBlock
                    x:Name="textBlockFooter"
                    Grid.Row="1"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="[TextFooter]"
                    TextWrapping="Wrap" Grid.ColumnSpan="2" Margin="0,0,0,16"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
